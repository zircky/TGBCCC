package zi.zircky.telegrambot.service.managet.start;

import lombok.AccessLevel;
import lombok.experimental.FieldDefaults;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Message;
import zi.zircky.telegrambot.service.factory.AnswerMethodFactory;
import zi.zircky.telegrambot.service.factory.KeyboardFactory;
import zi.zircky.telegrambot.service.managet.AbstractManager;
import zi.zircky.telegrambot.telegram.Bot;

import java.util.List;

import static zi.zircky.telegrambot.service.data.CallbackData.FEEDBACK;
import static zi.zircky.telegrambot.service.data.CallbackData.HELP;

@Component
@FieldDefaults(level = AccessLevel.PRIVATE)
public class StartManager extends AbstractManager {
  final AnswerMethodFactory methodFactory;
  final KeyboardFactory keyboardFactory;

  @Autowired
  public StartManager(AnswerMethodFactory methodFactory, KeyboardFactory keyboardFactory) {
    this.methodFactory = methodFactory;
    this.keyboardFactory = keyboardFactory;
  }

  @Override
  public SendMessage answerCommand(Message message, Bot bot) {
    return methodFactory.getSendMessage(
        message.getChatId(),
        """
              üññ–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ Tutor-Bot, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ä–µ–ø–∏—Ç–∏—Ç–æ—Ä–∞ –∏ —É—á–µ–Ω–∏–∫–∞.
            
              –ß—Ç–æ –±–æ—Ç —É–º–µ–µ—Ç?
              üìå –°–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
              üìå –ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
              üìå –í–≤–µ—Å—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏
            """,
        keyboardFactory.getInlineKeyboard(
            List.of("Help", "Feedback"),
            List.of(2),
            List.of(HELP, FEEDBACK)
        )
    );
  }

  @Override
  public BotApiMethod<?> answerMessage(Message message, Bot bot) {
    return null;
  }

  @Override
  public BotApiMethod<?> answerCallbackQuery(CallbackQuery callbackQuery, Bot bot) {
    return null;
  }
}
